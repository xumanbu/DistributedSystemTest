<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">


    <!--<bean name="dao" class="com.bestxty.ds.bean.CacheAnnotationDao" />-->

    <!-- ssm 配置文件，主要用来加载组件核心的Advice，供程序调度使用；封装在 simple-spring-memcached-3.1.0.jar 文件中-->
    <import resource="classpath:simplesm-context.xml"/>
    <!-- 让代理机制起到作用,simple-spring-memcached主要是基于AOP的代理  -->
    <aop:aspectj-autoproxy/>


    <bean name="ssmCacheManager" class="com.google.code.ssm.spring.SSMCacheManager">
        <property name="caches">
            <set>
                <bean class="com.google.code.ssm.spring.SSMCache">
                    <constructor-arg name="cache" index="0" ref="defaultCache"/>
                    <constructor-arg name="expiration" index="1" value="300"/>
                    <constructor-arg name="allowClear" index="2" value="false"/>
                </bean>
            </set>
        </property>
    </bean>

    <!-- com.google.code.ssm.CacheFactory是一个FactoryBean，会返回Cache（高速缓存）实体供Advice使用 -->
    <!-- FactoryBean解决的是如何创建无法直接通过new运算符创建的Bean，并注入到其他的bean中。也就是说FactoryBean是创建或者管理其他被注入和管理Bean的工厂Bean -->
    <bean name="defaultCache" class="com.google.code.ssm.CacheFactory">
        <property name="cacheName" value="defaultCache"/>
        <property name="cacheClientFactory">
            <!-- xmemcached配置方法 -->
            <bean class="com.google.code.ssm.providers.xmemcached.MemcacheClientFactoryImpl"/>
        </property>
        <!-- 定义了缓存节点的IP地址和端口号 -->
        <property name="addressProvider">
            <bean class="com.google.code.ssm.config.DefaultAddressProvider">
                <property name="address" value="${memcached-address}"/>
            </bean>
        </property>
        <!-- 定义了缓存节点的查找方法 -->
        <property name="configuration">
            <bean class="com.google.code.ssm.providers.xmemcached.XMemcachedConfiguration">
                <property name="consistentHashing" value="true"/>

                <property name="connectionPoolSize" value="1"/>

                <property name="optimizeGet" value="false"/>

                <property name="optimizeMergeBuffer" value="false"/>

                <property name="mergeFactor" value="50"/>

                <property name="useBinaryProtocol" value="true"/>
                <property name="connectionTimeout" value="2000"/>
                <property name="enableHeartBeat" value="true"/>
                <property name="failureMode" value="false"/>
            </bean>
        </property>
    </bean>


    <cache:annotation-driven cache-manager="ssmCacheManager"/>

</beans>